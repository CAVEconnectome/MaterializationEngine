name: Update Helm Chart

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to update chart to (leave empty to use latest release)"
        required: false
        type: string

jobs:
  update-chart:
    name: Update materializationengine Helm chart
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout MaterializationEngine repo
        uses: actions/checkout@v4
        
      - name: Get release version
        id: get-version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            # Manual trigger with specified version
            version="${{ github.event.inputs.version }}"
            version="${version#v}"  # remove 'v' prefix if present
            echo "VERSION=$version" >> $GITHUB_OUTPUT
            echo "Manual trigger - using version: $version"
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Manual trigger without version - use latest release
            latest_release=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
            version="${latest_release#v}"
            echo "VERSION=$version" >> $GITHUB_OUTPUT
            echo "Manual trigger - using latest release version: $version"
          else
            # Automatic trigger from release event
            version="${{ github.event.release.tag_name }}"
            version="${version#v}"
            echo "VERSION=$version" >> $GITHUB_OUTPUT
            echo "Release trigger - using version: $version"
          fi
          
      - name: Checkout cave-helm-charts repo
        uses: actions/checkout@v4
        with:
          repository: CAVEconnectome/cave-helm-charts
          token: ${{ secrets.HELM_CHART_UPDATE_TOKEN }}
          path: helm-charts
          
      - name: Update Chart.yaml appVersion
        id: update-chart
        run: |
          cd helm-charts
          chart_file="charts/materializationengine/Chart.yaml"
          
          # Get current chart version
          current_chart_version=$(grep '^version:' $chart_file | cut -d' ' -f2)
          echo "Current chart version: $current_chart_version"
          
          # Update appVersion
          sed -i "s/^appVersion: .*/appVersion: \"${{ steps.get-version.outputs.VERSION }}\"/" $chart_file
          
          # Bump chart patch version
          new_chart_version=$(echo $current_chart_version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          sed -i "s/^version: .*/version: $new_chart_version/" $chart_file
          
          echo "Updated to chart version: $new_chart_version"
          echo "Updated to app version: ${{ steps.get-version.outputs.VERSION }}"
          echo "CHART_VERSION=$new_chart_version" >> $GITHUB_OUTPUT
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.HELM_CHART_UPDATE_TOKEN }}
          path: helm-charts
          commit-message: |
            Update materializationengine to v${{ steps.get-version.outputs.VERSION }}
            
            - Update appVersion to ${{ steps.get-version.outputs.VERSION }}
            - Bump chart version to ${{ steps.update-chart.outputs.CHART_VERSION }}
          title: "chore: update materializationengine to v${{ steps.get-version.outputs.VERSION }}"
          body: |
            ## Auto-generated chart update
            
            This PR automatically updates the materializationengine Helm chart following the release of MaterializationEngine v${{ steps.get-version.outputs.VERSION }}.
            
            ### Changes
            - ðŸ“¦ **appVersion**: `${{ steps.get-version.outputs.VERSION }}`
            - ðŸ”¢ **chart version**: `${{ steps.update-chart.outputs.CHART_VERSION }}`
            
            ### Release Notes
            See the full release notes: ${{ github.event.release.html_url }}
            
            ---
            *This PR was automatically created by the MaterializationEngine release workflow.*
          branch: auto-update/materializationengine-v${{ steps.get-version.outputs.VERSION }}
          branch-suffix: timestamp
          delete-branch: true